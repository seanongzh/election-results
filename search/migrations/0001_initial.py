# Generated by Django 4.0.3 on 2022-03-08 08:51

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first', models.CharField(blank=True, max_length=255, null=True)),
                ('last', models.CharField(max_length=255)),
                ('middle', models.CharField(blank=True, max_length=2, null=True)),
                ('suffix', models.CharField(blank=True, max_length=5, null=True)),
                ('full_name', models.CharField(max_length=255)),
                ('aka', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
            ],
            options={
                'db_table': 'candidates',
            },
        ),
        migrations.CreateModel(
            name='ElectedPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('level', models.CharField(choices=[('municipal', 'Municipal'), ('county', 'County'), ('state', 'State'), ('national', 'National')], default='municipal', max_length=9)),
                ('eliminated_in', models.IntegerField(blank=True, null=True)),
                ('primary', models.BooleanField(default=False)),
                ('replaced_with', models.OneToOneField(blank=True, db_column='replaced_with', null=True, on_delete=django.db.models.deletion.CASCADE, to='search.electedposition')),
            ],
            options={
                'db_table': 'elected_positions',
            },
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('unexpired_term_length', models.IntegerField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='search.electedposition')),
            ],
            options={
                'db_table': 'elections',
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Parties',
                'db_table': 'parties',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('votes', models.IntegerField(blank=True, null=True)),
                ('municipal_winner', models.BooleanField(blank=True, null=True)),
                ('overall_winner', models.BooleanField(blank=True, null=True)),
                ('incumbent', models.BooleanField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='search.candidate')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='search.election')),
                ('party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='search.party')),
            ],
            options={
                'db_table': 'results',
            },
        ),
        migrations.AddConstraint(
            model_name='result',
            constraint=models.UniqueConstraint(fields=('election', 'candidate'), name='unique_result'),
        ),
    ]
